{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.type = type;\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _typeImplementation = require(\"./typeImplementation\"); // this needs to be wrapped in the event/asyncWrapper for React's act and angular's change detection\n// depending on whether it will be async.\n\n\nfunction type(element, text) {\n  let {\n    delay = 0,\n    ...options\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  // we do not want to wrap in the asyncWrapper if we're not\n  // going to actually be doing anything async, so we only wrap\n  // if the delay is greater than 0\n  if (delay > 0) {\n    return (0, _dom.getConfig)().asyncWrapper(() => (0, _typeImplementation.typeImplementation)(element, text, {\n      delay,\n      ...options\n    }));\n  } else {\n    return void (0, _typeImplementation.typeImplementation)(element, text, {\n      delay,\n      ...options\n    }) // prevents users from dealing with UnhandledPromiseRejectionWarning\n    .catch(console.error);\n  }\n}","map":{"version":3,"sources":["C:/Users/HP/my-ppp/node_modules/@testing-library/user-event/dist/type/index.js"],"names":["Object","defineProperty","exports","value","type","_dom","require","_typeImplementation","element","text","delay","options","getConfig","asyncWrapper","typeImplementation","catch","console","error"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,IAAR,GAAeA,IAAf;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,sBAAD,CAAlB;;AAEA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,sBAAD,CAAjC,C,CAEA;AACA;;;AACA,SAASF,IAAT,CAAcI,OAAd,EAAuBC,IAAvB,EAGQ;AAAA,MAHqB;AAC3BC,IAAAA,KAAK,GAAG,CADmB;AAE3B,OAAGC;AAFwB,GAGrB,uEAAJ,EAAI;;AACN;AACA;AACA;AACA,MAAID,KAAK,GAAG,CAAZ,EAAe;AACb,WAAO,CAAC,GAAGL,IAAI,CAACO,SAAT,IAAsBC,YAAtB,CAAmC,MAAM,CAAC,GAAGN,mBAAmB,CAACO,kBAAxB,EAA4CN,OAA5C,EAAqDC,IAArD,EAA2D;AACzGC,MAAAA,KADyG;AAEzG,SAAGC;AAFsG,KAA3D,CAAzC,CAAP;AAID,GALD,MAKO;AACL,WAAO,KAAK,CAAC,GAAGJ,mBAAmB,CAACO,kBAAxB,EAA4CN,OAA5C,EAAqDC,IAArD,EAA2D;AACrEC,MAAAA,KADqE;AAErE,SAAGC;AAFkE,KAA3D,EAGT;AAHS,KAIXI,KAJW,CAILC,OAAO,CAACC,KAJH,CAAZ;AAKD;AACF","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.type = type;\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _typeImplementation = require(\"./typeImplementation\");\n\n// this needs to be wrapped in the event/asyncWrapper for React's act and angular's change detection\n// depending on whether it will be async.\nfunction type(element, text, {\n  delay = 0,\n  ...options\n} = {}) {\n  // we do not want to wrap in the asyncWrapper if we're not\n  // going to actually be doing anything async, so we only wrap\n  // if the delay is greater than 0\n  if (delay > 0) {\n    return (0, _dom.getConfig)().asyncWrapper(() => (0, _typeImplementation.typeImplementation)(element, text, {\n      delay,\n      ...options\n    }));\n  } else {\n    return void (0, _typeImplementation.typeImplementation)(element, text, {\n      delay,\n      ...options\n    }) // prevents users from dealing with UnhandledPromiseRejectionWarning\n    .catch(console.error);\n  }\n}"]},"metadata":{},"sourceType":"script"}