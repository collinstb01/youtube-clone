{"ast":null,"code":"import request from '../../api';\nimport { CHANNEL_DETAILS_FAIL, CHANNEL_DETAILS_REQUEST, CHANNEL_DETAILS_SUCCESS, SET_SUBSCRIPTION_STATUS } from '../actionType';\nexport const getChannelDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: CHANNEL_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await request('/channels', {\n      params: {\n        part: 'snippet,statistics,contentDetails',\n        id\n      }\n    });\n    dispatch({\n      type: CHANNEL_DETAILS_SUCCESS,\n      payload: data.items[0]\n    });\n  } catch (error) {\n    console.log(error.response.data);\n    dispatch({\n      type: CHANNEL_DETAILS_FAIL,\n      payload: error.response.data\n    });\n  }\n};\nexport const checkSubscriptionStatus = id => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await request('/subscriptions', {\n      params: {\n        part: 'snippet',\n        forChannelId: id,\n        mine: true\n      },\n      headers: {\n        Authorization: `Bearer ${getState().auth.accessToken}`\n      }\n    });\n    dispatch({\n      type: SET_SUBSCRIPTION_STATUS,\n      payload: data.items.length !== 0\n    });\n    console.log(data);\n  } catch (error) {\n    console.log(error.response.data);\n  }\n};","map":{"version":3,"sources":["C:/Users/TB/Desktop/WEB20(youtube/src/redux/actions/channel.action.js"],"names":["request","CHANNEL_DETAILS_FAIL","CHANNEL_DETAILS_REQUEST","CHANNEL_DETAILS_SUCCESS","SET_SUBSCRIPTION_STATUS","getChannelDetails","id","dispatch","type","data","params","part","payload","items","error","console","log","response","checkSubscriptionStatus","getState","forChannelId","mine","headers","Authorization","auth","accessToken","length"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,SACGC,oBADH,EAEGC,uBAFH,EAGGC,uBAHH,EAIGC,uBAJH,QAKO,eALP;AAOA,OAAO,MAAMC,iBAAiB,GAAGC,EAAE,IAAI,MAAMC,QAAN,IAAkB;AACtD,MAAI;AACDA,IAAAA,QAAQ,CAAC;AACNC,MAAAA,IAAI,EAAEN;AADA,KAAD,CAAR;AAIA,UAAM;AAAEO,MAAAA;AAAF,QAAW,MAAMT,OAAO,CAAC,WAAD,EAAc;AACzCU,MAAAA,MAAM,EAAE;AACLC,QAAAA,IAAI,EAAE,mCADD;AAELL,QAAAA;AAFK;AADiC,KAAd,CAA9B;AAMAC,IAAAA,QAAQ,CAAC;AACNC,MAAAA,IAAI,EAAEL,uBADA;AAENS,MAAAA,OAAO,EAAEH,IAAI,CAACI,KAAL,CAAW,CAAX;AAFH,KAAD,CAAR;AAIF,GAfD,CAeE,OAAOC,KAAP,EAAc;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeR,IAA3B;AACAF,IAAAA,QAAQ,CAAC;AACNC,MAAAA,IAAI,EAAEP,oBADA;AAENW,MAAAA,OAAO,EAAEE,KAAK,CAACG,QAAN,CAAeR;AAFlB,KAAD,CAAR;AAIF;AACH,CAvBM;AAyBP,OAAO,MAAMS,uBAAuB,GAAGZ,EAAE,IAAI,OAAOC,QAAP,EAAiBY,QAAjB,KAA8B;AACxE,MAAI;AACD,UAAM;AAAEV,MAAAA;AAAF,QAAW,MAAMT,OAAO,CAAC,gBAAD,EAAmB;AAC9CU,MAAAA,MAAM,EAAE;AACLC,QAAAA,IAAI,EAAE,SADD;AAELS,QAAAA,YAAY,EAAEd,EAFT;AAGLe,QAAAA,IAAI,EAAE;AAHD,OADsC;AAM9CC,MAAAA,OAAO,EAAE;AACNC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,GAAGK,IAAX,CAAgBC,WAAY;AAD/C;AANqC,KAAnB,CAA9B;AAUAlB,IAAAA,QAAQ,CAAC;AACNC,MAAAA,IAAI,EAAEJ,uBADA;AAENQ,MAAAA,OAAO,EAAEH,IAAI,CAACI,KAAL,CAAWa,MAAX,KAAsB;AAFzB,KAAD,CAAR;AAIAX,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACF,GAhBD,CAgBE,OAAOK,KAAP,EAAc;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeR,IAA3B;AACF;AACH,CApBM","sourcesContent":["import request from '../../api'\nimport {\n   CHANNEL_DETAILS_FAIL,\n   CHANNEL_DETAILS_REQUEST,\n   CHANNEL_DETAILS_SUCCESS,\n   SET_SUBSCRIPTION_STATUS,\n} from '../actionType'\n\nexport const getChannelDetails = id => async dispatch => {\n   try {\n      dispatch({\n         type: CHANNEL_DETAILS_REQUEST,\n      })\n\n      const { data } = await request('/channels', {\n         params: {\n            part: 'snippet,statistics,contentDetails',\n            id,\n         },\n      })\n      dispatch({\n         type: CHANNEL_DETAILS_SUCCESS,\n         payload: data.items[0],\n      })\n   } catch (error) {\n      console.log(error.response.data)\n      dispatch({\n         type: CHANNEL_DETAILS_FAIL,\n         payload: error.response.data,\n      })\n   }\n}\n\nexport const checkSubscriptionStatus = id => async (dispatch, getState) => {\n   try {\n      const { data } = await request('/subscriptions', {\n         params: {\n            part: 'snippet',\n            forChannelId: id,\n            mine: true,\n         },\n         headers: {\n            Authorization: `Bearer ${getState().auth.accessToken}`,\n         },\n      })\n      dispatch({\n         type: SET_SUBSCRIPTION_STATUS,\n         payload: data.items.length !== 0,\n      })\n      console.log(data)\n   } catch (error) {\n      console.log(error.response.data)\n   }\n}\n"]},"metadata":{},"sourceType":"module"}