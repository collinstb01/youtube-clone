{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\my-ppp\\\\src\\\\components\\\\form.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport memedata from \"./memedata\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form(event) {\n  _s();\n\n  const [formData, setFormData] = React.useState({\n    firstName: \"\",\n    password: \"\",\n    repassword: \"\",\n    firstName: \"\",\n    isChecked: true\n  });\n\n  function handleChange(event) {\n    const [name, type, value, checked] = event.target;\n    setFormData(prevstate => ({ ...prevstate,\n      [name]: type === \"checkbox\" ? checked : value\n    }));\n  }\n\n  console.log(formData);\n\n  function declare(event) {\n    event.preventDefault();\n\n    if (formData.password !== formData.repassword) {\n      console.log(\"password mismatch\");\n    } else {\n      console.log(\"success\");\n    }\n\n    if (formData.isChecked == false) {\n      console.log(\"you cant joined news letter\");\n    } else {\n      console.log(\"you joined\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: declare,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"First Name\",\n      type: \"text\",\n      onChange: handleChange,\n      name: \"firstName\",\n      value: formData.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"password\",\n      type: \"password\",\n      onChange: handleChange,\n      name: \"password\",\n      value: formData.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"confirm password\",\n      type: \"text\",\n      onChange: handleChange,\n      name: \"repassword\",\n      value: formData.repassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      name: \"isChecked\",\n      checked: formData.isChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"jEUDp/ApBX6rQlqhq7BgUl0ZlWc=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/HP/my-ppp/src/components/form.js"],"names":["React","memedata","Form","event","formData","setFormData","useState","firstName","password","repassword","isChecked","handleChange","name","type","value","checked","target","prevstate","console","log","declare","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAEhC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,KAAK,CAACM,QAAN,CAAe;AAC3CC,IAAAA,SAAS,EAAE,EADgC;AAE3CC,IAAAA,QAAQ,EAAE,EAFiC;AAG3CC,IAAAA,UAAU,EAAE,EAH+B;AAI3CF,IAAAA,SAAS,EAAE,EAJgC;AAK3CG,IAAAA,SAAS,EAAE;AALgC,GAAf,CAAhC;;AAQA,WAASC,YAAT,CAAsBR,KAAtB,EAA6B;AACjC,UAAM,CAACS,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB,IAA+BZ,KAAK,CAACa,MAA3C;AAEIX,IAAAA,WAAW,CAACY,SAAS,KAAK,EACpB,GAAGA,SADiB;AAEjB,OAACL,IAAD,GAAQC,IAAI,KAAK,UAAT,GAAsBE,OAAtB,GAAgCD;AAFvB,KAAL,CAAV,CAAX;AAIH;;AACDI,EAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;;AAEA,WAASgB,OAAT,CAAiBjB,KAAjB,EAAwB;AACxBA,IAAAA,KAAK,CAACkB,cAAN;;AAES,QAAIjB,QAAQ,CAACI,QAAT,KAAsBJ,QAAQ,CAACK,UAAnC,EAA+C;AAC3CS,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,KAFD,MAEO;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;;AAED,QAAIf,QAAQ,CAACM,SAAT,IAAsB,KAA1B,EAAiC;AAC7BQ,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH,KAFD,MAEO;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;AACJ;;AAEF,sBACI;AAAM,IAAA,QAAQ,EAAEC,OAAhB;AAAA,4BACI;AACA,MAAA,WAAW,EAAC,YADZ;AAEA,MAAA,IAAI,EAAC,MAFL;AAGA,MAAA,QAAQ,EAAET,YAHV;AAIA,MAAA,IAAI,EAAC,WAJL;AAKA,MAAA,KAAK,EAAEP,QAAQ,CAACG;AALhB;AAAA;AAAA;AAAA;AAAA,YADJ,oBAOO;AAAA;AAAA;AAAA;AAAA,YAPP,eAQI;AACA,MAAA,WAAW,EAAC,UADZ;AAEA,MAAA,IAAI,EAAC,UAFL;AAGA,MAAA,QAAQ,EAAEI,YAHV;AAIA,MAAA,IAAI,EAAC,UAJL;AAKA,MAAA,KAAK,EAAEP,QAAQ,CAACI;AALhB;AAAA;AAAA;AAAA;AAAA,YARJ,oBAcO;AAAA;AAAA;AAAA;AAAA,YAdP,eAeI;AACA,MAAA,WAAW,EAAC,kBADZ;AAEA,MAAA,IAAI,EAAC,MAFL;AAGA,MAAA,QAAQ,EAAEG,YAHV;AAIA,MAAA,IAAI,EAAC,YAJL;AAKA,MAAA,KAAK,EAAEP,QAAQ,CAACK;AALhB;AAAA;AAAA;AAAA;AAAA,YAfJ,oBAqBO;AAAA;AAAA;AAAA;AAAA,YArBP,eAsBI;AACA,MAAA,IAAI,EAAC,UADL;AAEA,MAAA,IAAI,EAAC,WAFL;AAGA,MAAA,OAAO,EAAEL,QAAQ,CAACM;AAHlB;AAAA;AAAA;AAAA;AAAA,YAtBJ,oBA0BO;AAAA;AAAA;AAAA;AAAA,YA1BP,eA2BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GAnEuBR,I;;KAAAA,I","sourcesContent":["import React from \"react\";\r\nimport memedata from \"./memedata\";\r\n\r\n\r\nexport default function Form(event) {\r\n\r\n    const [formData, setFormData] = React.useState({\r\n        firstName: \"\",\r\n        password: \"\",\r\n        repassword: \"\",\r\n        firstName: \"\",\r\n        isChecked: true\r\n    })\r\n\r\n    function handleChange(event) {\r\nconst [name, type, value, checked] = event.target\r\n\r\n    setFormData(prevstate => ({\r\n          ...prevstate,\r\n             [name]: type === \"checkbox\" ? checked : value\r\n    }) )\r\n} \r\nconsole.log(formData)\r\n\r\nfunction declare(event) {\r\nevent.preventDefault()\r\n\r\n         if (formData.password !== formData.repassword) {\r\n             console.log(\"password mismatch\")\r\n         } else {\r\n             console.log(\"success\")\r\n         }\r\n    \r\n         if (formData.isChecked == false) {\r\n             console.log(\"you cant joined news letter\")\r\n         } else {\r\n             console.log(\"you joined\")\r\n         }\r\n     }\r\n\r\n    return (\r\n        <form onSubmit={declare}>\r\n            <input \r\n            placeholder=\"First Name\"\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            name=\"firstName\"\r\n            value={formData.firstName}\r\n            /> <br />\r\n            <input \r\n            placeholder=\"password\"\r\n            type=\"password\"\r\n            onChange={handleChange}\r\n            name=\"password\"\r\n            value={formData.password}\r\n            /> <br />\r\n            <input \r\n            placeholder=\"confirm password\"\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            name=\"repassword\"\r\n            value={formData.repassword}\r\n            /> <br />\r\n            <input \r\n            type=\"checkbox\"\r\n            name=\"isChecked\"\r\n            checked={formData.isChecked}\r\n            /> <br></br>\r\n            <button>sign in</button>\r\n        </form>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}