{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TB\\\\Desktop\\\\WEB20(youtube\\\\src\\\\components\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from \"styled-components\";\nimport { AiFillYoutube } from \"react-icons/ai\";\nimport { AiFillBell } from \"react-icons/ai\";\nimport { BsDice6Fill } from \"react-icons/bs\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport { getVideosBySearch } from '../redux/actions/videos.action';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = _ref => {\n  _s();\n\n  let {\n    toggle,\n    setToggle\n  } = _ref;\n  const navigate = useNavigate();\n  const [keyword, setKeyword] = useState('Search Youtube');\n  const dispatch = useDispatch();\n\n  const togglee = () => {\n    setToggle(e => !e);\n    console.log(\"clieked\");\n  };\n\n  const handleClick = () => {\n    navigate(`/search/${keyword}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grids, {\n      children: [/*#__PURE__*/_jsxDEV(Grid1, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle\",\n          onClick: togglee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AiFillYoutube, {\n          className: \"icons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              outline: \"none\",\n              color: \"white\"\n            },\n            children: \"YOUTUBE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid2, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Search Youtube\",\n          onChange: e => setKeyword(e.target.value),\n          onClick: handleClick,\n          value: keyword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid3, {\n        children: [/*#__PURE__*/_jsxDEV(AiFillBell, {\n          className: \"icons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BsDice6Fill, {\n          className: \"icons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n          children: \"H\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Navbar, \"CaEv+BqlPNwE9AWCqqizomzSiG8=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n\n_c = Navbar;\nexport default Navbar;\nconst Container = styled.div`\nwidth: 100%;\nheight: 10vh;\nborder-bottom: 1px solid gray;\nposition: sticky;\ntop: 0;\n.icons {\n    transform: scale();\n    cursor: pointer;\n    margin: 0px 19px;\n}\n.icons:hover{\n    opacity: 0.7;\n}\n.toggle {\n    position: relative;\n    background-color: white;\n    width: 13%;\n    height: 0.5vh;\n    cursor: pointer;\n    display: none;\n    @media (max-width: 1300px) {\n        display: block;\n    }\n}\n.toggle::after {\n    position: absolute;\n    content: \" \";\n    background-color: white;\n    width: 100%;\n    height: 0.5vh;\n    top: -250%;\n    left: 0;\n\n}\n.toggle::before {\n    position: absolute;\n    content: \" \";\n    background-color: white;\n    width: 100%;\n    height: 0.5vh;\n    top: 250%;\n}\n`;\n_c2 = Container;\nconst Grids = styled.div`\nwidth: 100%;\nheight: 10vh;\nbackground-color: #282828;\ncolor: white;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nspan {\n    font-weight: 500;\n    font-size: 21px;\n}\n`;\n_c3 = Grids;\nconst Grid1 = styled.div`\nwidth: 33.3%;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n.icons {\n    color: red;\n    transform: scale(3)\n}\n`;\n_c4 = Grid1;\nconst Grid2 = styled.div`\nwidth: 33.3%;\ndisplay: flex;\n\ninput {\n    flex: 1;\n    padding: 10px;\n    border: none;\n    outline: none;\n}\n`;\n_c5 = Grid2;\nconst Grid3 = styled.div`\nwidth: 33.3%;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n`;\n_c6 = Grid3;\nconst Avatar = styled.div`\nwidth: 40px;\nheight: 35px;\nbackground-color: whitesmoke;\ncolor: black;\nborder-radius: 50%;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nfont-weight: 600;\ncursor: pointer;\n`;\n_c7 = Avatar;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Grids\");\n$RefreshReg$(_c4, \"Grid1\");\n$RefreshReg$(_c5, \"Grid2\");\n$RefreshReg$(_c6, \"Grid3\");\n$RefreshReg$(_c7, \"Avatar\");","map":{"version":3,"sources":["C:/Users/TB/Desktop/WEB20(youtube/src/components/Navbar.js"],"names":["React","useEffect","useState","styled","AiFillYoutube","AiFillBell","BsDice6Fill","Link","useNavigate","getVideosBySearch","useDispatch","Navbar","toggle","setToggle","navigate","keyword","setKeyword","dispatch","togglee","e","console","log","handleClick","outline","color","target","value","Container","div","Grids","Grid1","Grid2","Grid3","Avatar"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,MAAM,GAAG,QAA2B;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAA0B;AACtC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,gBAAD,CAAtC;AACA,QAAMe,QAAQ,GAAGP,WAAW,EAA5B;;AACA,QAAMQ,OAAO,GAAG,MAAM;AAClBL,IAAAA,SAAS,CAAEM,CAAD,IAAO,CAACA,CAAT,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,GAHD;;AAKC,QAAMC,WAAW,GAAG,MAAM;AACvBR,IAAAA,QAAQ,CAAE,WAAUC,OAAQ,EAApB,CAAR;AACH,GAFA;;AAGD,sBACI,QAAC,SAAD;AAAA,2BACI,QAAE,KAAF;AAAA,8BACI,QAAC,KAAD;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAwB,UAAA,OAAO,EAAEG;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAE,aAAF;AAAgB,UAAA,SAAS,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGG,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA,iCACC;AAAM,YAAA,KAAK,EAAE;AAACK,cAAAA,OAAO,EAAE,MAAV;AAAkBC,cAAAA,KAAK,EAAE;AAAzB,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAHH;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,KAAD;AAAA,+BACI;AAAQ,UAAA,WAAW,EAAC,gBAApB;AACI,UAAA,QAAQ,EAAGL,CAAD,IAAOH,UAAU,CAACG,CAAC,CAACM,MAAF,CAASC,KAAV,CAD/B;AAEI,UAAA,OAAO,EAAEJ,WAFb;AAGI,UAAA,KAAK,EAAEP;AAHX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ,eAeI,QAAC,KAAD;AAAA,gCACI,QAAE,UAAF;AAAa,UAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAE,WAAF;AAAc,UAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CArCD;;GAAMJ,M;UACeH,W,EAEAE,W;;;KAHfC,M;AAuCN,eAAeA,MAAf;AACA,MAAMgB,SAAS,GAAGxB,MAAM,CAACyB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3CA;MAAMD,S;AA4CN,MAAME,KAAK,GAAG1B,MAAM,CAACyB,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;MAAMC,K;AAaN,MAAMC,KAAK,GAAG3B,MAAM,CAACyB,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAME,K;AAUN,MAAMC,KAAK,GAAG5B,MAAM,CAACyB,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMG,K;AAWN,MAAMC,KAAK,GAAG7B,MAAM,CAACyB,GAAI;AACzB;AACA;AACA;AACA;AACA,CALA;MAAMI,K;AAMN,MAAMC,MAAM,GAAG9B,MAAM,CAACyB,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMK,M","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport styled from \"styled-components\"\r\nimport { AiFillYoutube } from \"react-icons/ai\"\r\nimport { AiFillBell } from \"react-icons/ai\"\r\nimport { BsDice6Fill } from \"react-icons/bs\"\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { getVideosBySearch } from '../redux/actions/videos.action'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst Navbar = ({ toggle, setToggle }) => {\r\n    const navigate = useNavigate();\r\n    const [keyword, setKeyword] = useState('Search Youtube')\r\n    const dispatch = useDispatch()\r\n    const togglee = () => {\r\n        setToggle((e) => !e)\r\n        console.log(\"clieked\")\r\n    }\r\n     \r\n     const handleClick = () => {\r\n        navigate(`/search/${keyword}`)\r\n    }\r\n    return (\r\n        <Container>\r\n            < Grids >\r\n                <Grid1>\r\n                    <div className=\"toggle\" onClick={togglee}></div>\r\n                    < AiFillYoutube className='icons' />\r\n                   <Link to=\"/\">\r\n                    <span style={{outline: \"none\", color: \"white\"}}>YOUTUBE</span>\r\n                   </Link>\r\n                </Grid1>\r\n                <Grid2>\r\n                    < input placeholder='Search Youtube'\r\n                        onChange={(e) => setKeyword(e.target.value)}\r\n                        onClick={handleClick}\r\n                        value={keyword}\r\n                    />\r\n                </Grid2>\r\n                <Grid3>\r\n                    < AiFillBell className='icons' />\r\n                    < BsDice6Fill className='icons' />\r\n                    <Avatar>H</Avatar>\r\n                </Grid3>\r\n            </Grids>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\nconst Container = styled.div`\r\nwidth: 100%;\r\nheight: 10vh;\r\nborder-bottom: 1px solid gray;\r\nposition: sticky;\r\ntop: 0;\r\n.icons {\r\n    transform: scale();\r\n    cursor: pointer;\r\n    margin: 0px 19px;\r\n}\r\n.icons:hover{\r\n    opacity: 0.7;\r\n}\r\n.toggle {\r\n    position: relative;\r\n    background-color: white;\r\n    width: 13%;\r\n    height: 0.5vh;\r\n    cursor: pointer;\r\n    display: none;\r\n    @media (max-width: 1300px) {\r\n        display: block;\r\n    }\r\n}\r\n.toggle::after {\r\n    position: absolute;\r\n    content: \" \";\r\n    background-color: white;\r\n    width: 100%;\r\n    height: 0.5vh;\r\n    top: -250%;\r\n    left: 0;\r\n\r\n}\r\n.toggle::before {\r\n    position: absolute;\r\n    content: \" \";\r\n    background-color: white;\r\n    width: 100%;\r\n    height: 0.5vh;\r\n    top: 250%;\r\n}\r\n`\r\nconst Grids = styled.div`\r\nwidth: 100%;\r\nheight: 10vh;\r\nbackground-color: #282828;\r\ncolor: white;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nspan {\r\n    font-weight: 500;\r\n    font-size: 21px;\r\n}\r\n`\r\nconst Grid1 = styled.div`\r\nwidth: 33.3%;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n.icons {\r\n    color: red;\r\n    transform: scale(3)\r\n}\r\n`\r\nconst Grid2 = styled.div`\r\nwidth: 33.3%;\r\ndisplay: flex;\r\n\r\ninput {\r\n    flex: 1;\r\n    padding: 10px;\r\n    border: none;\r\n    outline: none;\r\n}\r\n`\r\nconst Grid3 = styled.div`\r\nwidth: 33.3%;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n`\r\nconst Avatar = styled.div`\r\nwidth: 40px;\r\nheight: 35px;\r\nbackground-color: whitesmoke;\r\ncolor: black;\r\nborder-radius: 50%;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nfont-weight: 600;\r\ncursor: pointer;\r\n`"]},"metadata":{},"sourceType":"module"}